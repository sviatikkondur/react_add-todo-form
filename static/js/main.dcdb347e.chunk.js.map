{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserById","usersFromServer","find","preparedTodos","userId","App","useState","setTodos","authorId","setAuthorId","setTitle","isTitleError","setIsTitleError","isUserError","setIsUserError","pattern","author","action","method","onSubmit","event","preventDefault","currentTodos","Math","max","type","placeholder","value","onChange","test","target","trimStart","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcdb347e.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user?: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(id: number): User | undefined {\n  return usersFromServer.find((user) => user.id === id);\n}\n\nconst preparedTodos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [authorId, setAuthorId] = useState(0);\n  const [title, setTitle] = useState<string>('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const pattern = /^[a-zA-Z0-9Є-ЯҐа-їґ ]+$/;\n\n  const author = getUserById(authorId);\n\n  const getID = () => {\n    const maxId = Math.max(...todos.map((todo) => todo.id));\n\n    return maxId + 1;\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsTitleError(true);\n    }\n\n    if (!author) {\n      setIsUserError(true);\n    }\n\n    if (title && author) {\n      setTodos(currentTodos => [\n        ...currentTodos,\n        {\n          id: getID(),\n          title,\n          userId: author.id,\n          user: author,\n          completed: false,\n        },\n      ]);\n\n      setTitle('');\n      setAuthorId(0);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (pattern.test(event.target.value) || event.target.value === '') {\n      setIsTitleError(false);\n      setTitle(event.target.value.trimStart());\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setIsUserError(false);\n    setAuthorId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={authorId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}